#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import TSSLSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from thriftproxy import ThriftProxy
from thriftproxy.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print('')
  print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] function [arg1 [arg2...]]')
  print('')
  print('Functions:')
  print('  RegionResponseData GetSugRegion(RegionRequest region_request)')
  print('  KeywordResponseData GetSugKeyWord(KeywordRequest keyword_request)')
  print('  HotHotelResponse SearchHotHotel( region_id)')
  print('  HotHotelResponse SearchHotHotel1(HotHotelRequest request)')
  print('  ListResponse SearchList(ListRequest request)')
  print('  ListRtsResponse SearchListRts(ListRtsRequest request)')
  print('  DetailResponse SearchDetail(DetailRequest request)')
  print('  DetailRtsResponse SearchDetailRts(DetailRtsRequest request)')
  print('  ListMapResponse SearchListMap(ListRequest request)')
  print('  NearbyResponse SearchNearby(NearbyRequest request)')
  print('  InnerSearchResponse SearchInner(InnerSearchRequest request)')
  print('  FilterSearchResponse SearchFilter(FilterSearchRequest request)')
  print('  NearByInfoResponse SearchNearByInfo(NearByInfoRequest request)')
  print('  PersonalTraitResponse SearchPersonalTrait(PersonalTraitRequest request)')
  print('')
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
  ssl = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSSLSocket.TSSLSocket(host, port, validate=False) if ssl else TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = ThriftProxy.Client(protocol)
transport.open()

if cmd == 'GetSugRegion':
  if len(args) != 1:
    print('GetSugRegion requires 1 args')
    sys.exit(1)
  pp.pprint(client.GetSugRegion(eval(args[0]),))

elif cmd == 'GetSugKeyWord':
  if len(args) != 1:
    print('GetSugKeyWord requires 1 args')
    sys.exit(1)
  pp.pprint(client.GetSugKeyWord(eval(args[0]),))

elif cmd == 'SearchHotHotel':
  if len(args) != 1:
    print('SearchHotHotel requires 1 args')
    sys.exit(1)
  pp.pprint(client.SearchHotHotel(eval(args[0]),))

elif cmd == 'SearchHotHotel1':
  if len(args) != 1:
    print('SearchHotHotel1 requires 1 args')
    sys.exit(1)
  pp.pprint(client.SearchHotHotel1(eval(args[0]),))

elif cmd == 'SearchList':
  if len(args) != 1:
    print('SearchList requires 1 args')
    sys.exit(1)
  pp.pprint(client.SearchList(eval(args[0]),))

elif cmd == 'SearchListRts':
  if len(args) != 1:
    print('SearchListRts requires 1 args')
    sys.exit(1)
  pp.pprint(client.SearchListRts(eval(args[0]),))

elif cmd == 'SearchDetail':
  if len(args) != 1:
    print('SearchDetail requires 1 args')
    sys.exit(1)
  pp.pprint(client.SearchDetail(eval(args[0]),))

elif cmd == 'SearchDetailRts':
  if len(args) != 1:
    print('SearchDetailRts requires 1 args')
    sys.exit(1)
  pp.pprint(client.SearchDetailRts(eval(args[0]),))

elif cmd == 'SearchListMap':
  if len(args) != 1:
    print('SearchListMap requires 1 args')
    sys.exit(1)
  pp.pprint(client.SearchListMap(eval(args[0]),))

elif cmd == 'SearchNearby':
  if len(args) != 1:
    print('SearchNearby requires 1 args')
    sys.exit(1)
  pp.pprint(client.SearchNearby(eval(args[0]),))

elif cmd == 'SearchInner':
  if len(args) != 1:
    print('SearchInner requires 1 args')
    sys.exit(1)
  pp.pprint(client.SearchInner(eval(args[0]),))

elif cmd == 'SearchFilter':
  if len(args) != 1:
    print('SearchFilter requires 1 args')
    sys.exit(1)
  pp.pprint(client.SearchFilter(eval(args[0]),))

elif cmd == 'SearchNearByInfo':
  if len(args) != 1:
    print('SearchNearByInfo requires 1 args')
    sys.exit(1)
  pp.pprint(client.SearchNearByInfo(eval(args[0]),))

elif cmd == 'SearchPersonalTrait':
  if len(args) != 1:
    print('SearchPersonalTrait requires 1 args')
    sys.exit(1)
  pp.pprint(client.SearchPersonalTrait(eval(args[0]),))

else:
  print('Unrecognized method %s' % cmd)
  sys.exit(1)

transport.close()
