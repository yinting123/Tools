#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.3)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import TSSLSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from dsservice import DSServiceProxy
from dsservice.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print('')
  print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] function [arg1 [arg2...]]')
  print('')
  print('Functions:')
  print('  InnerSearchResponse SearchInner(InnerSearchRequest request, InnerSearchResponse response)')
  print('  DSSInnerSearchResponse SearchInner2(InnerSearchRequest request, DSSInnerSearchHotel hotelidAttr)')
  print('  VerifyPriceResponse SearchInnerVerifyPrice(VerifyPriceRequest request)')
  print('  VerifyPriceResponse ChangePrice4Order(VerifyPriceRequest request)')
  print('  DSSSearchCanBookResponse SearchCanBook(InnerSearchRequest request, DSSSearchCanBookRequest cbRequest)')
  print('  SearchResponse SearchDebugDetail(InnerSearchRequest request)')
  print('  SearchResponse SearchDsTransportTest(SearchResponse searchResponse)')
  print('  StringModel SearchGsTransportTest(StringModel content)')
  print('  GetProductBaseInfoResponse GetProductBaseInfo(GetProductBaseInfoRequest request)')
  print('  GetInvAndInstantConfirmResponse GetInvAndInstantConfirm(GetInvAndInstantConfirmRequest request)')
  print('')
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
  ssl = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSSLSocket.TSSLSocket(host, port, validate=False) if ssl else TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = DSServiceProxy.Client(protocol)
transport.open()

if cmd == 'SearchInner':
  if len(args) != 2:
    print('SearchInner requires 2 args')
    sys.exit(1)
  pp.pprint(client.SearchInner(eval(args[0]),eval(args[1]),))

elif cmd == 'SearchInner2':
  if len(args) != 2:
    print('SearchInner2 requires 2 args')
    sys.exit(1)
  pp.pprint(client.SearchInner2(eval(args[0]),eval(args[1]),))

elif cmd == 'SearchInnerVerifyPrice':
  if len(args) != 1:
    print('SearchInnerVerifyPrice requires 1 args')
    sys.exit(1)
  pp.pprint(client.SearchInnerVerifyPrice(eval(args[0]),))

elif cmd == 'ChangePrice4Order':
  if len(args) != 1:
    print('ChangePrice4Order requires 1 args')
    sys.exit(1)
  pp.pprint(client.ChangePrice4Order(eval(args[0]),))

elif cmd == 'SearchCanBook':
  if len(args) != 2:
    print('SearchCanBook requires 2 args')
    sys.exit(1)
  pp.pprint(client.SearchCanBook(eval(args[0]),eval(args[1]),))

elif cmd == 'SearchDebugDetail':
  if len(args) != 1:
    print('SearchDebugDetail requires 1 args')
    sys.exit(1)
  pp.pprint(client.SearchDebugDetail(eval(args[0]),))

elif cmd == 'SearchDsTransportTest':
  if len(args) != 1:
    print('SearchDsTransportTest requires 1 args')
    sys.exit(1)
  pp.pprint(client.SearchDsTransportTest(eval(args[0]),))

elif cmd == 'SearchGsTransportTest':
  if len(args) != 1:
    print('SearchGsTransportTest requires 1 args')
    sys.exit(1)
  pp.pprint(client.SearchGsTransportTest(eval(args[0]),))

elif cmd == 'GetProductBaseInfo':
  if len(args) != 1:
    print('GetProductBaseInfo requires 1 args')
    sys.exit(1)
  pp.pprint(client.GetProductBaseInfo(eval(args[0]),))

elif cmd == 'GetInvAndInstantConfirm':
  if len(args) != 1:
    print('GetInvAndInstantConfirm requires 1 args')
    sys.exit(1)
  pp.pprint(client.GetInvAndInstantConfirm(eval(args[0]),))

else:
  print('Unrecognized method %s' % cmd)
  sys.exit(1)

transport.close()
